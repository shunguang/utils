function add_logo_on_a_video( inputVideoFile, locationFlag, logoImageFile, outputVideoQuality )
%----------------------------------------------------------------------
% Exmples of usages
%   1. add_logo_on_a_video( 'myVideo.AVI')
%   The sarnoff logo ('Sarnoff-Transparent-Logo1.GIF') will be added
%   on the Top-Right corners of the video frames, the video file name is
%   'myVideo.avi',  and the heighest quality (100) will be used for the output
%   video.
%
%   2. add_logo_on_a_video( 'myVideo.AVI', 'Top-Right')
%   The sarnoff logo ('Sarnoff-Transparent-Logo1.GIF') will be added on
%   the video frames with the highest output video quality.
%   The location of the logo can be appeared on
%   'Top-Left', 'Top-Right', 'Bottom-Left', and 'Bottom-Right'.
%
%   3. add_logo_on_a_video( 'myVideo.AVI', 'Top-Right', 'logo.GIF')
%   A logo image named 'logo.GIF' will be added on a video named
%   'myVideo.AVI' in particular location, and out put video is generated by
%   the heighest quality.
%
%   4. add_logo_on_a_video( 'myVideo.AVI', 'Top-Right', 'Sarnoff-Transparent-Logo1.GIF', 85)
%   a logo image named 'Sarnoff-Transparent-Logo1.GIF' will be added on the
%   video 'myVideo.AVI' in particular place, and output video quality is
%   85 (you can choose any number between 1 and 100 to make a balance between
%   the video quality and its file size)

%----------------------------------------------------------------------
% Author:      Shunguang Wu
% Email:       swu@sarnoff.com
% Shop Number: 33948.100
% Date:        05/16/06
%
% Copyright  (C)  Sarnoff Corporation, 2006.
% Sarnoff is a registered trademark of Sarnoff Corporation.
%
% This document discloses proprietary and confidential information
% of Sarnoff Corporation and may not be used, released, or disclosed
% in whole or in part for any purpose other then its intended use,
% or to any party other than the authorized recipient.
%----------------------------------------------------------------------
warning off all

if nargin < 2
    locationFlag = 'Top-Left';
    logoImageFile = 'Sarnoff-Transparent-Logo1.GIF';
    outputVideoQuality = 100;
elseif nargin < 3
    logoImageFile = 'Sarnoff-Transparent-Logo1.GIF';
    outputVideoQuality = 100;
elseif nargin < 4
    outputVideoQuality = 100;
end

if outputVideoQuality > 100
    outputVideoQuality = 100;
elseif outputVideoQuality < 1
    outputVideoQuality = 1;
end

outputVideoFile = [inputVideoFile(1:length(inputVideoFile)-4),'_with_logo.avi'];

fprintf('The output video file name is: %s\n', outputVideoFile);
fprintf('I am running, please wait ...\n');

%------------------------------------------------
%read logo image
%------------------------------------------------
logoInfo = imfinfo(logoImageFile);
if logoInfo.ColorType == 'indexed'
    [logoImg, map] = imread(logoImageFile );
    logoImgRGB = ind2rgb(logoImg, map);
else
    logoImgRGB = imread( logoImageFile );
end
%normalize to [0,255]
for i=1:3
    logMax = max( max( logoImgRGB(:,:,i) ) );
    logoImgRGB(:,:,i) = floor(255/logMax * logoImgRGB(:,:,i));
end
logoImgRGB = remove_background( logoImgRGB );

%------------------------------------------------
%get input video information
%------------------------------------------------
inputVideoInfo = aviinfo(inputVideoFile);
%inputMov = aviread(inputVideoFile);
outputMov = avifile(outputVideoFile, 'fps', inputVideoInfo.FramesPerSecond, 'quality', outputVideoQuality );

blockSize = 100;
nBlocks = ceil ( inputVideoInfo.NumFrames/blockSize );
fprintf( 'total # of frames: %d, image width=%d, image height=%d\n', inputVideoInfo.NumFrames, inputVideoInfo.Width, inputVideoInfo.Height );
fprintf( 'Current procesed frame numbers are: ' );

for iBlock = 1:nBlocks
    n1 = (iBlock-1)*blockSize + 1;
    n2 = n1 + blockSize - 1;
    if n2 > inputVideoInfo.NumFrames
        n2 = inputVideoInfo.NumFrames;
    end
    endId = n2-n1+1;

    frameIds = [n1:n2];
    curBlock = aviread(inputVideoFile, frameIds);
    
    fprintf( '[%d, %d], ', n1, n2 );
    for i=1:endId
        curFrame = curBlock(i);
        %creat a image with logo inside the original image
        if inputVideoInfo.ImageType == 'truecolor'
            curImgRGB = frame2im ( curFrame );
        else  %indexed
            [curImgIndex, map] = frame2im ( curFrame );
            curImgRGB = ind2rgb(curImgIndex, map);
        end

        curImgWithLogo = add_logo(logoImgRGB, curImgRGB, locationFlag);
        curFrameWithLogo = im2frame( curImgWithLogo );

        %     figure(1);
        %     imshow( curImgWithLogo ); hold on;
        %     imshow( logoImgRGB ); hold on;
        outputMov = addframe(outputMov, curFrameWithLogo);
    end
end
outputMov = close( outputMov );
% fprintf('\n*----------------*\n');
% fprintf('* Job well done! *\n');
% fprintf('*----------------*\n');
%eof

function xRGB = add_logo(logoRGB, xRGB, flag)
[hLogo, wLogo, n] = size(logoRGB);
[hImg, wImg, n] = size(xRGB);
switch flag
    case 'Top-Left'
        r1 = 1;
        c1 = 1;
    case 'Top-Right'
        r1 = 1;
        c1 = wImg - wLogo;
    case 'Bottom-Left'
        r1 = hImg - hLogo;
        c1 = 1;
    case 'Bottom-Right'
        r1 = hImg - hLogo;
        c1 = wImg - wLogo;
    otherwise
        r1 = 1;
        c1 = 1;
end
r2 = r1 + hLogo - 1;
c2 = c1 + wLogo - 1;

for i = 1:hLogo
    for j = 1:wLogo
        if logoRGB(i, j, 1) > -1  %only the foreground is used to overlay
            xRGB( r1+i-1, c1+j-1, : ) = logoRGB(i, j, :);
        end
    end
end
%xRGB( r1:r2, c1:c2, 2 ) = logoRGB(:, :, 2);
%xRGB( r1:r2, c1:c2, 3 ) = logoRGB(:, :, 3);

function logoImgRGB = remove_background( logoImgRGB )
%assume the white is the backround
[h,w,n] = size( logoImgRGB );
for i=1:h
    for j=1:w
        if ( logoImgRGB(i,j,1) == logoImgRGB(i,j,2) &  ...
                logoImgRGB(i,j,1) == logoImgRGB(i,j,3) )

            logoImgRGB(i,j,1) = -1;  %marked as background
        end
    end
end


